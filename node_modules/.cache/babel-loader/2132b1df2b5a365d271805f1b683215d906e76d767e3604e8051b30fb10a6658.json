{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kacpe\\\\Desktop\\\\projects\\\\zadanie\\\\src\\\\Components\\\\Search\\\\Search.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Search.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = () => {\n  _s();\n  const [searchValue, setSearchValue] = useState();\n  const [breeds, setBreeds] = useState();\n  const [image, setImage] = useState({\n    src: '',\n    alt: ''\n  });\n  const [status, setStatus] = useState(\"\");\n  useEffect(() => {\n    axios.get('https://dog.ceo/api/breeds/list/all').then(res => {\n      let breedsArr = [];\n      console.log(res.data.message);\n      for (var i in res.data.message) {\n        if (Boolean(res.data.message[i][0])) {\n          for (var j in res.data.message[i]) {\n            breedsArr.push(`${i} ${res.data.message[i][j]}`);\n          }\n        }\n      }\n      setBreeds(breedsArr);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  useEffect(() => {\n    console.log(searchValue);\n  }, [searchValue]);\n  const handleSearch = () => {\n    console.log(searchValue);\n    console.log(Boolean(searchValue));\n    if (searchValue) {\n      console.log(/\\s/g.test(searchValue));\n    }\n    axios.get('https://dog.ceo/api/breeds/list/all').then(res => {\n      let breedsArr = [];\n      console.log(res.data.message);\n      for (var i in res.data.message) {\n        if (Boolean(res.data.message[i][0])) {\n          for (var j in res.data.message[i]) {\n            breedsArr.push(`${i} ${res.data.message[i][j]}`);\n          }\n        } else {\n          breedsArr.push(`${i}`);\n        }\n      }\n      if (breedsArr && searchValue) {\n        const found = breedsArr.find(breed => breed.includes(searchValue));\n        console.log(Boolean(found));\n        if (found) {\n          var searched = found.split(\" \");\n          console.log(found.split(\" \").length);\n          console.log(found.split(\" \"));\n          var breed = found.split(\" \")[0];\n          var subBreed = found.split(\" \")[1];\n          if (searched.length > 1) {\n            axios.get(`https://dog.ceo/api/breed/${breed}/${subBreed}/images/random`).then(res => {\n              console.log(res.data);\n              setStatus(\"Loaded\");\n              setImage({\n                src: res.data.message,\n                alt: `${breed} ${subBreed}`\n              });\n            }).catch(err => {\n              setStatus(\"Error\");\n              console.log(err);\n            });\n          } else {\n            axios.get(`https://dog.ceo/api/breed/${breed}/images/random`).then(res => {\n              console.log(res.data);\n              setStatus(\"Loaded\");\n              setImage({\n                src: res.data.message,\n                alt: breed\n              });\n            }).catch(err => {\n              setStatus(\"Error\");\n              console.log(err);\n            });\n          }\n        } else {\n          setImage({\n            src: '',\n            alt: ''\n          });\n          setStatus(\"Error\");\n        }\n      } else {\n        setStatus(\"Error\");\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  const renderImage = () => {\n    console.log(`status: ${status}`);\n    console.log(`img: ${image}`);\n    if (status === \"Loaded\") {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image.src,\n        alt: image.alt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 20\n      }, this);\n    } else if (status === \"Error\" && image.src) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Podaj nazw\\u0119 rasy psa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Podaj poprawn\\u0105 ras\\u0119\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 20\n      }, this);\n    }\n  };\n  useEffect(() => {\n    console.log(breeds);\n  }, [breeds]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"search-input\",\n      children: \"Podaj nazw\\u0119 psa:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"search-input\",\n      onChange: e => {\n        setSearchValue(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"search-btn\",\n      onClick: handleSearch,\n      children: \"Wyszukaj\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), status === \"Loaded\" ? renderImage() : \"Wczytywanie...\", renderImage()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n};\n_s(Search, \"VvTv2LGUhKGpMK8LfCFP7EshZXo=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Search","_s","searchValue","setSearchValue","breeds","setBreeds","image","setImage","src","alt","status","setStatus","get","then","res","breedsArr","console","log","data","message","i","Boolean","j","push","catch","err","handleSearch","test","found","find","breed","includes","searched","split","length","subBreed","renderImage","fileName","_jsxFileName","lineNumber","columnNumber","children","className","htmlFor","type","id","onChange","e","target","value","onClick","_c","$RefreshReg$"],"sources":["C:/Users/kacpe/Desktop/projects/zadanie/src/Components/Search/Search.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Search.css';\r\n\r\nconst Search = () => {\r\n\r\n    const [searchValue, setSearchValue] = useState<string>()\r\n    const [breeds, setBreeds] = useState<string[]>()\r\n    const [image, setImage] = useState<{src: string, alt: string}>({src: '', alt: ''})\r\n    const [status, setStatus] = useState<string>(\"\")\r\n\r\n    useEffect(() => {\r\n        axios.get('https://dog.ceo/api/breeds/list/all')\r\n        .then(res => {\r\n            let breedsArr:string[] = []\r\n            console.log(res.data.message)\r\n            for(var i in res.data.message){\r\n                if(Boolean(res.data.message[i][0])){\r\n                    for(var j in res.data.message[i]){\r\n                        breedsArr.push(`${i} ${res.data.message[i][j]}`)\r\n                    }\r\n                }\r\n            }\r\n            setBreeds(breedsArr)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log(searchValue)\r\n    }, [searchValue])\r\n\r\n    const handleSearch = () => {\r\n        console.log(searchValue)\r\n        console.log(Boolean(searchValue))\r\n        if(searchValue){\r\n            console.log(/\\s/g.test(searchValue))\r\n        }\r\n        axios.get('https://dog.ceo/api/breeds/list/all')\r\n        .then(res => {\r\n            let breedsArr:string[] = []\r\n            console.log(res.data.message)\r\n            for(var i in res.data.message){\r\n                if(Boolean(res.data.message[i][0])){\r\n                    for(var j in res.data.message[i]){\r\n                        breedsArr.push(`${i} ${res.data.message[i][j]}`)\r\n                    }\r\n                }else{\r\n                    breedsArr.push(`${i}`)\r\n                }\r\n            }\r\n            if(breedsArr && searchValue){\r\n                const found:any = breedsArr.find(breed => breed.includes(searchValue))\r\n                console.log(Boolean(found))\r\n                if(found){\r\n                    var searched:string[] = found.split(\" \")\r\n                    console.log(found.split(\" \").length)\r\n                    console.log(found.split(\" \"))\r\n                    var breed = found.split(\" \")[0]\r\n                    var subBreed = found.split(\" \")[1]\r\n                    if(searched.length > 1){\r\n                        axios.get(`https://dog.ceo/api/breed/${breed}/${subBreed}/images/random`)\r\n                        .then(res => {\r\n                            console.log(res.data)\r\n                            setStatus(\"Loaded\")\r\n                            setImage({src: res.data.message, alt: `${breed} ${subBreed}`})\r\n                        })\r\n                        .catch(err => {\r\n                            setStatus(\"Error\")\r\n                            console.log(err)\r\n                        })\r\n                    }else{\r\n                        axios.get(`https://dog.ceo/api/breed/${breed}/images/random`)\r\n                        .then(res => {\r\n                            console.log(res.data)\r\n                            setStatus(\"Loaded\")\r\n                            setImage({src: res.data.message, alt: breed})\r\n                        })\r\n                        .catch(err => {\r\n                            setStatus(\"Error\")\r\n                            console.log(err)\r\n                        })\r\n                    }\r\n                }else{\r\n                    setImage({src: '', alt: ''})\r\n                    setStatus(\"Error\")\r\n                }\r\n            }else{\r\n                setStatus(\"Error\")\r\n            }\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const renderImage = () => {\r\n        console.log(`status: ${status}`)\r\n        console.log(`img: ${image}`)\r\n        if(status === \"Loaded\"){\r\n            return <img src={image.src} alt={image.alt} />\r\n        }else if(status === \"Error\" && image.src){\r\n            return <span>Podaj nazwę rasy psa</span>\r\n        }else{\r\n            return <span>Podaj poprawną rasę</span>\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(breeds)\r\n    }, [breeds])\r\n\r\n    return (\r\n        <div className='search-wrapper'>\r\n            <label htmlFor=\"search-input\">\r\n                Podaj nazwę psa: \r\n            </label>\r\n            <input type='text' id='search-input' onChange={(e:any)=>{setSearchValue(e.target.value)}}></input>\r\n            <button className='search-btn' onClick={handleSearch}>Wyszukaj</button>\r\n            {\r\n                status === \"Loaded\" ? renderImage() : \"Wczytywanie...\"\r\n            }\r\n            {   \r\n                renderImage()\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}